function zd = keplerJ2_wPhi_ODE(t,Z)
%keplerJ2_wPhi_ODE produce the state derivative vector 
%
% NOTE: FUNCTION PASSED MATLAB GRADER TEST!
%
% Input:
% Z (56,1) vector of the form [x y z xdot ydot zdot J2 STM_FLAT]'
%
% Output:
% zd (56,1) the derivative [xdot ydot zdot xddot yddot zddot
%            J2dot STMdot_FLAT]'
%


% FROM MATLAB GRADER:
mu = 3.986004415e5; % Earth Gravitation
R = 6378; % Spherical Earth Radius

RE = R;

% Unpack Z
x    = Z(1);
y    = Z(2);
z    = Z(3);
xdot = Z(4);
ydot = Z(5);
zdot = Z(6);
J2   = Z(7);
STM_FLAT = Z(8:end);

% Accelerations:
xddot = (mu*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2) + (mu*x*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2);
 
yddot = (mu*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2) + (mu*y*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2);
 
zddot = (mu*z*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2) - (mu*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2);
 
% Partials  
daxdx = (mu*((3*J2*RE^2*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2 - (24*J2*RE^2*x^2*z^2)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*x^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*x^2*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2) - (2*mu*x*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2);
 
 
daxdy = - (mu*((24*J2*RE^2*x*y*z^2)/(x^2 + y^2 + z^2)^4 + (4*J2*RE^2*x*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) - (mu*y*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*x*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*x*y*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
daxdz = (mu*((J2*RE^2*x*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^2 + (6*J2*RE^2*x*z)/(x^2 + y^2 + z^2)^3 - (18*J2*RE^2*x*z^3)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*x*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*x*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*z*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*x*z*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
daxdJ2 = (mu*((3*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2) + (RE^2*mu*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(2*(x^2 + y^2 + z^2)^(5/2));
 
 
daydx = - (mu*((24*J2*RE^2*x*y*z^2)/(x^2 + y^2 + z^2)^4 + (4*J2*RE^2*x*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) - (mu*y*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*x*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*x*y*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
daydy = (mu*((3*J2*RE^2*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2 - (24*J2*RE^2*y^2*z^2)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*y^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*y^2*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2) - (2*mu*y*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2);
 
 
daydz = (mu*((J2*RE^2*y*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^2 + (6*J2*RE^2*y*z)/(x^2 + y^2 + z^2)^3 - (18*J2*RE^2*y*z^3)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*y*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*y*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*z*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*y*z*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
daydJ2 = (mu*((3*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2) + (RE^2*mu*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(2*(x^2 + y^2 + z^2)^(5/2));
 
 
dazdx = (mu*((J2*RE^2*((12*x*z)/(x^2 + y^2 + z^2)^2 - (24*x*z^3)/(x^2 + y^2 + z^2)^3))/(2*(x^2 + y^2 + z^2)) + (J2*RE^2*x*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^2 - (6*J2*RE^2*x*z^3)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*x*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*x*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*z*((3*J2*RE^2*x*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*x*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*x*z*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
dazdy = (mu*((J2*RE^2*((12*y*z)/(x^2 + y^2 + z^2)^2 - (24*y*z^3)/(x^2 + y^2 + z^2)^3))/(2*(x^2 + y^2 + z^2)) + (J2*RE^2*y*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^2 - (6*J2*RE^2*y*z^3)/(x^2 + y^2 + z^2)^4 - (4*J2*RE^2*y*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*y*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (mu*z*((3*J2*RE^2*y*z^2)/(x^2 + y^2 + z^2)^3 + (J2*RE^2*y*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*y*z*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
dazdz = (mu*((J2*RE^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2 - (J2*RE^2*(6/(x^2 + y^2 + z^2) - (30*z^2)/(x^2 + y^2 + z^2)^2 + (24*z^4)/(x^2 + y^2 + z^2)^3))/(2*(x^2 + y^2 + z^2)) + (2*J2*RE^2*z*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^2 - (4*J2*RE^2*z^2*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^3))/(x^2 + y^2 + z^2)^(1/2) + (mu*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(3/2) + (2*mu*z*((J2*RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (J2*RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(3/2) - (3*mu*z^2*((J2*((3*z^2)/(x^2 + y^2 + z^2) - 1)*RE^2)/(2*x^2 + 2*y^2 + 2*z^2) - 1))/(x^2 + y^2 + z^2)^(5/2);
 
 
dazdJ2 = (RE^2*mu*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(2*(x^2 + y^2 + z^2)^(5/2)) - (mu*((RE^2*((6*z)/(x^2 + y^2 + z^2) - (6*z^3)/(x^2 + y^2 + z^2)^2))/(2*(x^2 + y^2 + z^2)) - (RE^2*z*((3*z^2)/(x^2 + y^2 + z^2) - 1))/(x^2 + y^2 + z^2)^2))/(x^2 + y^2 + z^2)^(1/2);
 

% Build State dynamics matrix A
A = zeros(7,7);
A(1:3,4:6) = eye(3);
A(4:6,1:3) = [daxdx, daxdy, daxdz;...
              daydx, daydy, daydz;...
              dazdx, dazdy, dazdz];
A(4:6,7) = [daxdJ2;daydJ2;dazdJ2];

%
STM = reshape(STM_FLAT,7,7);
STMdot = A * STM;

STMdot_FLAT = reshape(STMdot,7^2,1);

zd = zeros(7^2+7,1);
zd(1:3,1) = [xdot;ydot;zdot];
zd(4:6,1) = [xddot;yddot;zddot];
zd(8:end,1) = STMdot_FLAT;

end
